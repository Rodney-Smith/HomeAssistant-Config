substitutions:
  name: btproxy-99696c
  friendly_name: Hall Bluetooth Proxy
  ip_address: !secret ip_btproxy-99696c
  api_key: !secret btproxy-99696c

packages:
#  esphome.bluetooth-proxy: github://esphome/bluetooth-proxies/esp32-generic.yaml@main
  esphome.bluetooth-proxy: github://esphome/firmware/bluetooth-proxy/esp32-generic.yaml@main

esphome:
  name: ${name}
  comment: ESPHome Bluetooth Proxy
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: ${ip_address}
    gateway: !secret ip_gateway
    subnet: !secret ip_subnet
    dns1: !secret ip_dns
  ap: 
    ssid: ${name}_AP
    password: !secret wifi_ap_pass
    ap_timeout: 3min

api:
  encryption:
    key: ${api_key}

ota:
  password: !secret esphome_ota

# https://esphome.io/components/web_server.html
web_server:
  local: true

esp32:
  board: esp32dev
  framework:
    type: esp-idf

logger:
improv_serial:

dashboard_import:
#  package_import_url: github://esphome/bluetooth-proxies/esp32-generic.yaml@main
  package_import_url: github://esphome/firmware/bluetooth-proxy/esp32-generic.yaml@main

esp32_ble_tracker:
  scan_parameters:
    # We currently use the defaults to ensure Bluetooth
    # can co-exist with WiFi In the future we may be able to
    # enable the built-in coexistence logic in ESP-IDF
    active: true

bluetooth_proxy:
  active: true

button:
- platform: safe_mode
  name: Safe Mode Boot
  entity_category: diagnostic